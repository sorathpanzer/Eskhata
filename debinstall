#!/bin/bash

USERNAME=""
PASSWORD=""

apt install -y extlinux syslinux
mkdir /boot/extlinux
cp -r /lib/syslinux/modules/bios /boot/extlinux

cat <<EOF > /boot/extlinux/extlinux.conf
DEFAULT Debian

LABEL Debian
	KERNEL /boot/$(ls /boot | grep vmlinuz)
	APPEND root=/dev/sda1 rw
	INITRD /boot/$(ls /boot | grep initrd)
EOF

cat /lib/syslinux/mbr/mbr.bin > /dev/sda
extlinux --install /boot/extlinux

apt-get purge -y libfreetype6 libfuse2 libpng16-16 grub

cat <<EOF > /etc/apt/apt.conf.d/01norecommends
APT::Install-Recommends "0";
APT::Install-Suggests "0";
APT::AutoRemove::RecommendsImportant "0";
APT::AutoRemove::SuggestsImportant "0";
EOF

echo "kernel.perf_cpu_time_max_percent = 0" >> /etc/sysctl.conf

apt autoremove -y
apt install -y chromium chromium-l10n stow
apt install -y git ca-certificates curl

printf "$PASSWORD\n$PASSWORD" | sudo -Hu $USERNAME git clone https://gitea.com/sorathpanzer/dotgit.git /home/$USERNAME/.config/dotgit
printf "$PASSWORD\n$PASSWORD" | sudo -Hu $USERNAME mkdir -p /home/$USERNAME/.cache/zsh
printf "$PASSWORD\n$PASSWORD" | sudo -Hu $USERNAME touch /home/$USERNAME/.cache/zsh/history
rm $HOME/.profile
printf "$PASSWORD\n$PASSWORD" | sudo -Hu $USERNAME sh -c "cd /home/$USERNAME/.config/dotgit; stow -vt ~ dotfiles"
printf "$PASSWORD\n$PASSWORD" | sudo -Hu $USERNAME sh -c "curl -L https://github.com/gokcehan/lf/releases/download/r24/lf-linux-amd64.tar.gz | tar xzC ~/.local/bin"

apt install -y build-essential libx11-dev libxft-dev libxinerama-dev libimlib2-dev libexif-dev xorg xauth
apt install -y udiskie x11-xserver-utils xinput pulseaudio pulseaudio-utils pulsemixer hsetroot ntfs-3g fuse picom numlockx xdotool man
apt install -y zsh zsh-syntax-highlighting zsh-autosuggestions fzf exa bat doas trash-cli youtube-dl mpv xclip neovim

git clone https://github.com/Earnestly/sx
cd sx
make PREFIX=/usr install
cd
rm -r sx

apt install -y gir1.2-gst-plugins-base-1.0 gir1.2-gst-plugins-bad-1.0 xdg-user-dirs wireless-tools iwd ripgrep mediainfo bat pass xdotool highlight
apt install -y libreoffice libreoffice-l10n-pt imagemagick transmission-cli fonts-dejavu ntp  bc pulseaudio hsetroot alsa-utils firewalld apparmor
apt install -y xclip numlockx scrot rsync zathura doas udiskie trash-cli dunst youtube-dl physlock picom jq fzf mpv wmctrl light patch
apt install -y unzip usbutils ffmpegthumbnailer pulsemixer rkhunter clamav

sudo systemctl enable ntp

echo "permit persist $USERNAME as root
permit nopass $USERNAME cmd apt
permit nopass $USERNAME cmd journalctl
permit nopass $USERNAME cmd poweroff
permit nopass $USERNAME cmd reboot
permit nopass $USERNAME cmd udiskctl
permit nopass $USERNAME cmd mount
permit nopass $USERNAME cmd light" > /mnt/etc/doas.conf

echo "vm.swappiness=10" > /mnt/etc/sysctl.d/99-sysctl.conf
echo 1 | sudo tee /sys/module/snd_hda_intel/parameters/power_save

  echo '/* Allow members of the wheel group to execute any actions
  * without password authentication, similar to "sudo NOPASSWD:"
  */
  polkit.addRule(function(action, subject) {
  if (subject.isInGroup("wheel")) {
    return polkit.Result.YES;
  }
});' > /mnt/etc/polkit-1/rules.d/49-nopasswd_global.rules

echo 'polkit.addRule(function(action, subject) {
if ((action.id == "org.freedesktop.udisks2.filesystem-mount-system" ||
  action.id == "org.freedesktop.udisks.filesystem-mount-system-internal") &&
  subject.local && subject.active && subject.isInGroup("wheel"))
  {
    return polkit.Result.YES;
  }
});' > /mnt/etc/polkit-1/rules.d/allow-mount-internal.rules

mkdir -p /mnt/media

echo '# UDISKS_FILESYSTEM_SHARED
# ==1: mount filesystem to a shared directory (/media/VolumeName)
# ==0: mount filesystem to a private directory (/run/media/$USER/VolumeName)
# See udisks(8)
ENV{ID_FS_USAGE}=="filesystem|other|crypto", ENV{UDISKS_FILESYSTEM_SHARED}="1"' > /mnt/etc/udev/rules.d/99-udisks2.rules

ln -sfT dash /usr/bin/sh

mkdir /mnt/etc/iwd
echo "[General]
EnableNetworkConfiguration=true

[Settings]
AutoConnect=true" > /mnt/etc/iwd/main.conf

# Configure AppArmor Parser caching
sed -i 's/#write-cache/write-cache/g' /etc/apparmor/parser.conf
sed -i 's,#Include /etc/apparmor.d/,Include /etc/apparmor.d/#g' /etc/apparmor/parser.conf

# Blacklisting kernel modules
curl https://raw.githubusercontent.com/Whonix/security-misc/master/etc/modprobe.d/30_security-misc.conf >> /mnt/etc/modprobe.d/30_security-misc.conf
chmod 600 /mnt/etc/modprobe.d/*

# Security kernel settings.
curl https://raw.githubusercontent.com/Whonix/security-misc/master/etc/sysctl.d/30_security-misc.conf >> /mnt/etc/sysctl.d/30_security-misc.conf
sed -i 's/kernel.yama.ptrace_scope=2/kernel.yama.ptrace_scope=3/g' /mnt/etc/sysctl.d/30_security-misc.conf
curl https://raw.githubusercontent.com/Whonix/security-misc/master/etc/sysctl.d/30_silent-kernel-printk.conf >> /mnt/etc/sysctl.d/30_silent-kernel-printk.conf
chmod 600 /mnt/etc/sysctl.d/*

# IO udev rules
curl https://gitlab.com/garuda-linux/themes-and-settings/settings/garuda-common-settings/-/raw/master/etc/udev/rules.d/50-sata.rules > /mnt/etc/udev/rules.d/50-sata.rules
curl https://gitlab.com/garuda-linux/themes-and-settings/settings/garuda-common-settings/-/raw/master/etc/udev/rules.d/60-ioschedulers.rules > /etc/udev/rules.d/60-ioschedulers.rules
chmod 600 /mnt/etc/udev/rules.d/*

# Remove nullok from system-auth
sed -i 's/nullok//g' /mnt/etc/pam.d/system-auth

# Disable coredump
echo "* hard core 0" >> /mnt/etc/security/limits.conf

# Disable su for non-wheel users
bash -c 'cat > /mnt/etc/pam.d/su' <<-'EOF'
#%PAM-1.0
auth		sufficient	pam_rootok.so
# Uncomment the following line to implicitly trust users in the "wheel" group.
#auth		sufficient	pam_wheel.so trust use_uid
# Uncomment the following line to require a user to be in the "wheel" group.
auth		required	pam_wheel.so use_uid
auth		required	pam_unix.so
account		required	pam_unix.so
session		required	pam_unix.so
EOF

# Enable AppArmor notifications
bash -c 'cat > /mnt/home/${USER}/.config/autostart/apparmor-notify.desktop' <<-'EOF'
[Desktop Entry]
Type=Application
Name=AppArmor Notify
Comment=Receive on screen notifications of AppArmor denials
TryExec=aa-notify
Exec=aa-notify -p -s 1 -w 60 -f /var/log/audit/audit.log
StartupNotify=false
NoDisplay=true
EOF

mkdir -p /mnt/etc/systemd/system/transmission.service.d
echo "[Service]
User=$USERNAME" > /mnt/etc/systemd/system/transmission.service.d/username.conf

mkdir -p /mnt/etc/systemd/system/getty@tty1.service.d
touch /mnt/etc/systemd/system/getty@tty1.service.d/override.conf
echo "[Service]
ExecStart=
ExecStart=-/usr/bin/agetty --autologin $USERNAME --noclear %I $TERM" > /mnt/etc/systemd/system/getty@tty1.service.d/override.conf

systemctl enable iwd.service transmission-daemon apparmor firewalld
aa-enforce /etc/apparmor.d/*

#ueberzug lazygit alacritty
